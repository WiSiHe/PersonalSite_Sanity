"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _ui = require("@sanity/ui");

var _tool = _interopRequireDefault(require("all:part:@sanity/base/tool"));

var _ = require(".");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var defaultUnknownError = {
  message: 'An unknown error occurred while rendering'
};

// eslint-disable-next-line react/require-optimization
class RenderTool extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      error: null,
      showErrorDetails: __DEV__
    });

    _defineProperty(this, "handleRetry", () => {
      this.setState({
        error: null
      });
    });
  }

  componentDidUpdate(prevProps, prevState) {
    var prevToolName = prevProps.tool;
    var currToolName = this.props.tool;

    if (prevToolName !== currToolName && prevState.error) {
      // https://reactjs.org/docs/react-component.html#componentdidupdate
      // eslint-disable-next-line react/no-did-update-set-state
      this.setState({
        error: null,
        showErrorDetails: __DEV__
      });
    }
  }

  componentDidCatch(error, info) {
    this.setState({
      error: {
        error,
        info
      }
    });
  }

  getActiveTool() {
    var activeToolName = this.props.tool;

    var activeTool = _tool.default.find(tool => tool.name === activeToolName);

    return activeTool;
  }

  render() {
    if (this.state.error) {
      var _this$state$error = this.state.error,
          error = _this$state$error.error,
          info = _this$state$error.info;
      var showErrorDetails = this.state.showErrorDetails;
      return /*#__PURE__*/_react.default.createElement(_.ErrorScreen, {
        activeTool: this.getActiveTool() // Some (rare) errors doesn't seem to have any Error instance attached
        // In these cases, default to an error-like object with a generic message
        ,
        error: error || defaultUnknownError,
        info: info,
        onRetry: this.handleRetry,
        showErrorDetails: showErrorDetails
      });
    }

    if (!_tool.default.length) {
      return /*#__PURE__*/_react.default.createElement(_ui.Card, {
        height: "fill",
        paddingX: [5, 5, 7],
        paddingY: [5, 5, 6],
        sizing: "border"
      }, /*#__PURE__*/_react.default.createElement(_ui.Container, null, /*#__PURE__*/_react.default.createElement(_ui.Box, {
        marginBottom: 5
      }, /*#__PURE__*/_react.default.createElement(_ui.Heading, {
        as: "h1"
      }, "No available tools")), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
        space: 4
      }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
        muted: true
      }, "No tools implement the ", /*#__PURE__*/_react.default.createElement("code", null, "part:@sanity/base/tool"), ", so there is nothing to display."))));
    }

    var activeTool = this.getActiveTool();

    if (!activeTool) {
      return /*#__PURE__*/_react.default.createElement(_ui.Card, {
        height: "fill",
        paddingX: [5, 5, 7],
        paddingY: [5, 5, 6],
        sizing: "border"
      }, /*#__PURE__*/_react.default.createElement(_ui.Container, null, /*#__PURE__*/_react.default.createElement(_ui.Box, {
        marginBottom: 5
      }, /*#__PURE__*/_react.default.createElement(_ui.Heading, {
        as: "h1"
      }, "Tool not found: ", /*#__PURE__*/_react.default.createElement("code", null, this.props.tool))), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
        space: 4
      }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
        muted: true
      }, "The list of tools installed in this Studio does not include", ' ', /*#__PURE__*/_react.default.createElement("code", null, this.props.tool)))));
    }

    var ActiveTool = activeTool.component;
    return /*#__PURE__*/_react.default.createElement(ActiveTool, this.props);
  }

}

exports.default = RenderTool;

_defineProperty(RenderTool, "defaultProps", {
  tool: null
});