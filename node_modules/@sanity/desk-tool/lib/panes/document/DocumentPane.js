"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DocumentPane = DocumentPane;

var _ui = require("@sanity/ui");

var _paths = require("@sanity/util/paths");

var _components = require("@sanity/base/components");

var _changeIndicators = require("@sanity/base/change-indicators");

var _isHotkey = _interopRequireDefault(require("is-hotkey"));

var _presence = require("part:@sanity/base/datastore/presence");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _paneRouter = require("../../contexts/paneRouter");

var _deskTool = require("../../contexts/deskTool");

var _pane = require("../../components/pane");

var _useUnique = require("../../lib/useUnique");

var _usePaneLayout2 = require("../../components/pane/usePaneLayout");

var _changesPanel = require("./changesPanel");

var _documentHistory = require("./documentHistory");

var _documentPanel = require("./documentPanel");

var _DocumentOperationResults = require("./DocumentOperationResults");

var _inspectDialog = require("./inspectDialog");

var _keyboardShortcuts = require("./keyboardShortcuts");

var _menuItems = require("./menuItems");

var _statusBar = require("./statusBar");

var _usePreviewUrl = require("./usePreviewUrl");

var _excluded = ["inspect"];

var _templateObject;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var EMPTY_ARRAY = [];
var StyledChangeConnectorRoot = (0, _styledComponents.default)(_changeIndicators.ChangeConnectorRoot)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  flex: 2;\n  display: flex;\n  direction: column;\n  min-width: 0;\n  height: 100%;\n"])));

function DocumentPane(props) {
  var connectionState = props.connectionState,
      documentId = props.documentId,
      documentIdRaw = props.documentIdRaw,
      documentType = props.documentType,
      draft = props.draft,
      index = props.index,
      initialValueProp = props.initialValue,
      isClosable = props.isClosable,
      markersProp = props.markers,
      _props$menuItemGroups = props.menuItemGroups,
      menuItemGroups = _props$menuItemGroups === void 0 ? EMPTY_ARRAY : _props$menuItemGroups,
      onChange = props.onChange,
      paneKey = props.paneKey,
      published = props.published,
      paneTitle = props.title,
      schemaType = props.schemaType,
      value = props.value,
      compareValue = props.compareValue,
      _props$views = props.views,
      viewsProp = _props$views === void 0 ? EMPTY_ARRAY : _props$views;

  var _useDeskTool = (0, _deskTool.useDeskTool)(),
      features = _useDeskTool.features;

  var _usePaneLayout = (0, _usePaneLayout2.usePaneLayout)(),
      layoutCollapsed = _usePaneLayout.collapsed;

  var markers = (0, _useUnique.useUnique)(markersProp);
  var initialValue = (0, _useUnique.useUnique)(initialValueProp);
  var views = (0, _useUnique.useUnique)(viewsProp);

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      rootElement = _useState2[0],
      setRootElement = _useState2[1];

  var _useState3 = (0, _react.useState)(null),
      _useState4 = _slicedToArray(_useState3, 2),
      footerElement = _useState4[0],
      setFooterElement = _useState4[1];

  var _useState5 = (0, _react.useState)(null),
      _useState6 = _slicedToArray(_useState5, 2),
      actionsBoxElement = _useState6[0],
      setActionsBoxElement = _useState6[1];

  var footerRect = (0, _ui.useElementRect)(footerElement);

  var _useDocumentHistory = (0, _documentHistory.useDocumentHistory)(),
      historyController = _useDocumentHistory.historyController,
      openHistory = _useDocumentHistory.open,
      displayed = _useDocumentHistory.displayed;

  var historyState = historyController.selectionState;
  var paneRouter = (0, _paneRouter.usePaneRouter)();
  var activeViewId = paneRouter.params.view || views[0] && views[0].id;

  var _React$useState = _react.default.useState(() => paneRouter.params.path ? (0, _paths.fromString)(paneRouter.params.path) : []),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      formInputFocusPath = _React$useState2[0],
      setFocusPath = _React$useState2[1];

  var isInspectOpen = paneRouter.params.inspect === 'on';
  var previewUrl = (0, _usePreviewUrl.usePreviewUrl)(value);
  var isChangesOpen = historyController.changesPanelActive();
  var zOffsets = (0, _components.useZIndex)();
  var inspectValue = displayed || initialValue;

  var _useToast = (0, _ui.useToast)(),
      pushToast = _useToast.push;

  var hasValue = Boolean(value);
  var menuItems = (0, _react.useMemo)(() => (0, _menuItems.getMenuItems)({
    features,
    hasValue,
    isHistoryOpen: isChangesOpen,
    previewUrl
  }), [features, hasValue, isChangesOpen, previewUrl]);
  var handleFocus = (0, _react.useCallback)(nextFocusPath => {
    setFocusPath((0, _paths.pathFor)(nextFocusPath));
    (0, _presence.setLocation)([{
      type: 'document',
      documentId,
      path: nextFocusPath,
      lastActiveAt: new Date().toISOString()
    }]);
  }, [documentId]);
  var toggleInspect = (0, _react.useCallback)(function () {
    var toggle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !isInspectOpen;

    var _paneRouter$params = paneRouter.params,
        oldInspect = _paneRouter$params.inspect,
        params = _objectWithoutProperties(_paneRouter$params, _excluded);

    if (toggle) {
      paneRouter.setParams(_objectSpread({
        inspect: 'on'
      }, params));
    } else {
      paneRouter.setParams(params);
    }
  }, [isInspectOpen, paneRouter]);
  var handleMenuAction = (0, _react.useCallback)(item => {
    if (item.action === 'production-preview') {
      window.open(item.url);
      return true;
    }

    if (item.action === 'inspect') {
      toggleInspect(true);
      return true;
    }

    if (item.action === 'reviewChanges') {
      openHistory();
      return true;
    }

    return false;
  }, [openHistory, toggleInspect]);
  var handleKeyUp = (0, _react.useCallback)(event => {
    var _iterator = _createForOfIteratorHelper(menuItems),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var item = _step.value;

        if (item.shortcut) {
          if ((0, _isHotkey.default)(item.shortcut, event)) {
            event.preventDefault();
            event.stopPropagation();
            handleMenuAction(item);
            return;
          }
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }, [handleMenuAction, menuItems]);
  var handleInspectClose = (0, _react.useCallback)(() => toggleInspect(false), [toggleInspect]);
  var handleClosePane = (0, _react.useCallback)(() => paneRouter.closeCurrent(), [paneRouter]);
  var handleSplitPane = (0, _react.useCallback)(() => paneRouter.duplicateCurrent(), [paneRouter]);
  (0, _react.useEffect)(() => {
    if (connectionState === 'reconnecting') {
      pushToast({
        id: 'desk-tool/reconnecting',
        status: 'warning',
        title: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Connection lost. Reconnecting\u2026")
      });
    }
  }, [connectionState, pushToast]);
  var updatedAt = value === null || value === void 0 ? void 0 : value._updatedAt;
  var paneFooter = (0, _react.useMemo)(() => /*#__PURE__*/_react.default.createElement(_pane.PaneFooter, {
    ref: setFooterElement
  }, /*#__PURE__*/_react.default.createElement(_statusBar.DocumentStatusBar, {
    actionsBoxRef: setActionsBoxElement,
    id: documentId,
    type: documentType,
    lastUpdated: updatedAt
  })), [documentId, documentType, setActionsBoxElement, updatedAt]);
  var inspectDialog = (0, _react.useMemo)(() => /*#__PURE__*/_react.default.createElement(_components.LegacyLayerProvider, {
    zOffset: "fullscreen"
  }, isInspectOpen && /*#__PURE__*/_react.default.createElement(_inspectDialog.InspectDialog, {
    idPrefix: paneKey,
    onClose: handleInspectClose,
    value: inspectValue
  })), [handleInspectClose, inspectValue, isInspectOpen, paneKey]);
  return /*#__PURE__*/_react.default.createElement(_keyboardShortcuts.DocumentActionShortcuts, {
    actionsBoxElement: actionsBoxElement,
    "data-index": index,
    "data-pane-key": paneKey,
    "data-ui": "DocumentPane",
    flex: 2.5,
    id: documentIdRaw,
    minWidth: isChangesOpen ? 640 : 320,
    type: documentType,
    onKeyUp: handleKeyUp,
    rootRef: setRootElement
  }, /*#__PURE__*/_react.default.createElement(_ui.DialogProvider, {
    position: ['fixed', 'absolute'],
    zOffset: zOffsets.portal
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    flex: 1,
    height: layoutCollapsed ? undefined : 'fill'
  }, /*#__PURE__*/_react.default.createElement(StyledChangeConnectorRoot, {
    onSetFocus: handleFocus,
    onOpenReviewChanges: openHistory,
    isReviewChangesOpen: isChangesOpen
  }, /*#__PURE__*/_react.default.createElement(_documentPanel.DocumentPanel, {
    activeViewId: activeViewId,
    documentId: documentId,
    documentType: documentType,
    draft: draft,
    footerHeight: (footerRect === null || footerRect === void 0 ? void 0 : footerRect.height) || null,
    idPrefix: paneKey,
    formInputFocusPath: formInputFocusPath,
    onFormInputFocus: handleFocus,
    initialValue: initialValue,
    isClosable: isClosable,
    isHistoryOpen: isChangesOpen,
    markers: markers,
    menuItems: menuItems,
    menuItemGroups: menuItemGroups,
    onChange: onChange,
    onCloseView: handleClosePane,
    onMenuAction: handleMenuAction,
    onSplitPane: handleSplitPane,
    paneTitle: paneTitle,
    published: published,
    rootElement: rootElement,
    schemaType: schemaType,
    value: value,
    compareValue: isChangesOpen ? historyController.sinceAttributes() : compareValue,
    views: views
  }), features.reviewChanges && isChangesOpen && /*#__PURE__*/_react.default.createElement(_ui.BoundaryElementProvider, {
    element: rootElement
  }, /*#__PURE__*/_react.default.createElement(_changesPanel.ChangesPanel, {
    documentId: documentId,
    loading: historyState === 'loading',
    schemaType: schemaType,
    since: historyController.sinceTime
  }))))), paneFooter, /*#__PURE__*/_react.default.createElement(_DocumentOperationResults.DocumentOperationResults, {
    id: documentId,
    type: documentType
  }), inspectDialog);
}